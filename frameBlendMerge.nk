# frameBlendMerge v1.2 by Richard Frazer
# www.richardfrazer.com/tools-tutorials/frameblendmerge/


set cut_paste_input [stack 0]
version 9.0 v6
push $cut_paste_input
Group {
name FrameBlendMerge
help http://richardfrazer.com/tools-tutorials/auto-cleanplate-for-nuke/
knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n#print n\['customframerange'].getValue()\nif k.name()==\"customframerange\":\n    n\['framerangestart'].setEnabled((n\['customframerange'].getValue())!=0)\n    n\['framerangeend'].setEnabled(n\['customframerange'].getValue()!=0)\n    n\['numberframes'].setEnabled((1-n\['customframerange'].getValue())!=0)\nif k.name()==\"invertalpha\":\n    n\['defaultinvert'].setValue((n\['invertalpha'].getValue())!=0)\nif k.name()==\"method\":\n    n\['vectordetail'].setVisible((n\['method'].getValue())!=0)\n    n\['smooth'].setVisible(n\['method'].getValue()!=0)\n    if n\['method'].getValue()==0:\n        n\['invertalpha'].setValue(n\['defaultinvert'].getValue())\n    if n\['method'].getValue()==1:\n        n\['invertalpha'].setValue(0)\n"
selected true
xpos -1257
ypos 97
addUserKnob {20 User}
addUserKnob {4 operation M {atop average color-burn color-dodge conjoint-over copy difference disjoint-over divide exclusion from geometric hard-light hypot in mask matte max min minus multiply out over overlay plus screen soft-light stencil under xor}}
operation min
addUserKnob {26 ""}
addUserKnob {26 text2 l "" +STARTLINE T "Frame blend\n"}
addUserKnob {3 framerangestart l "Frame Range"}
framerangestart 1001
addUserKnob {3 framerangeend l "" -STARTLINE}
framerangeend 1010
addUserKnob {22 InputRange l "Input Range" -STARTLINE T "n = nuke.thisNode()\nf = n.firstFrame()\nl = n.lastFrame() \n\nn\['framerangestart'].setValue(f)\nn\['framerangeend'].setValue(l)"}
addUserKnob {26 ""}
addUserKnob {22 update l Update T "t = nuke.thisNode()\n\ntname = t.name()\n\n#print ('tname: ' + tname)\n\n\nnuke.thisNode().begin()\n\nframestart = int(t\['framerangestart'].value())\nframeend = int(t\['framerangeend'].value())\n\np = -1000\n\nfor d in nuke.allNodes():\n    if (d.Class() == 'Input') or (d.Class() == 'Output') or (d.Class() == 'Dot'):\n         print (\"Ignore this\")\n    else:\n         nuke.delete(d)\n\n\nfor x in xrange(framestart, frameend):\n    nname = 'FrameHoldMerge' +str(x)\n    if(nuke.exists( nname )):\n        #print (nname + \" exists\")\n        k = nuke.toNode ( nname ) \n        nuke.delete ( k )\n    n = nuke.createNode( 'FrameHold' )        \t\t\n    n\['name'].setValue( nname )\n    n\['first_frame'].setValue( x )\n    n.setXYpos( p, 600 )\n    n.setInput(0, nuke.toNode( 'inputDot' ))\n    p = p + 100\n\nnewMerge = nuke.createNode('Merge2')\nnewMerge\['name'].setValue( 'MergeFrames' )\nnewMerge.setXYpos( -900, 700 )  \n\ni = 0\n\nfor x in xrange(framestart, frameend):\n    nname = 'FrameHoldMerge' +str(x)\n    n = nuke.toNode( nname )\n    if(i==2):\n        i=i+1\n    #print(\"connecting input \" + str(i))\n    newMerge.setInput(i, nuke.toNode( nname ))\n    i=i+1\n\nnewMerge.setInput(2, nuke.toNode( \"Mask\" ))\n\ntoperation = t\['operation'].value()\nnewMerge\['operation'].setValue( toperation )\n\no = nuke.toNode( 'OutputBlend' )\no.setInput(0, newMerge)\n\nnewMerge.hideControlPanel()\n\nnuke.thisNode().end()\n\nt = nuke.toNode( tname )\n\n#print ('t: ' +  t.name() )\n\nnuke.show(t)\n" +STARTLINE}
addUserKnob {20 About}
addUserKnob {26 textabout l "" +STARTLINE T "FrameBlendMerge v1.2 by Richard Frazer\nwww.richardfrazer.com/tools-tutorials/frameblendmerge/\n"}
}
Input {
inputs 0
name Input
xpos -905
ypos 395
}
Dot {
name inputDot
xpos -871
ypos 495
}
set N5393e50 [stack 0]
FrameHold {
first_frame 1009
name FrameHoldMerge1009
xpos -200
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1008
name FrameHoldMerge1008
xpos -300
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1007
name FrameHoldMerge1007
xpos -400
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1006
name FrameHoldMerge1006
xpos -500
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1005
name FrameHoldMerge1005
xpos -600
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1004
name FrameHoldMerge1004
xpos -700
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1003
name FrameHoldMerge1003
xpos -800
ypos 600
}
Input {
inputs 0
name Mask
xpos -1179
ypos 700
number 1
}
push $N5393e50
FrameHold {
first_frame 1002
name FrameHoldMerge1002
xpos -900
ypos 600
}
push $N5393e50
FrameHold {
first_frame 1001
name FrameHoldMerge1001
xpos -1000
ypos 600
}
Merge2 {
inputs 9+1
operation min
name MergeFrames
xpos -900
ypos 700
}
Output {
name OutputBlend
xpos -900
ypos 817
}
end_group
